<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shsxt.crm.dao.UserDao">

    <resultMap type="User" id="UserResult">
        <result property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="password" column="password"/>
        <result property="trueName" column="true_name"/>
        <result property="email" column="email"/>
        <result property="phone" column="phone"/>
        <result property="isValid" column="is_valid"/>
        <result property="createDate" column="create_date"/>
        <result property="updateDate" column="update_date"/>

        <collection property="roles" ofType="com.shsxt.crm.vo.RoleVO">
            <result property="id" column="rid"/>
            <result property="roleName" column="role_name"/>
        </collection>


    </resultMap>

    <sql id="User_Columns">
        id, user_name, password, true_name, email, phone, is_valid, create_date, update_date
    </sql>

    <sql id="User_Columns_Join">
        t1.id, t1.user_name, t1.password, t1.true_name, t1.email, t1.phone, t1.is_valid,
        t1.create_date, t1.update_date
    </sql>

    <select id="findUserByName" resultMap="UserResult" >
        SELECT <include refid="User_Columns" /> FROM
        t_user WHERE user_name = #{userName}
    </select>

    <select id="loadById" resultMap="UserResult" >
        SELECT <include refid="User_Columns" /> FROM
        t_user WHERE id = #{id} and is_valid = 1
    </select>

    <select id="find" resultMap="UserResult" >
        SELECT
        <include refid="User_Columns" />
        FROM
        t_user
        <where>
            is_valid = 1
            <if test="@Ognl@isNotEmpty(userName)" >
                AND user_name = #{userName}
            </if>
            <if test="@Ognl@isNotEmpty(email)" >
                AND email = #{email}
            </if>
            <if test="@Ognl@isNotEmpty(phone)" >
                AND phone = #{phone}
            </if>
        </where>
    </select>

    <select id="findByRole" resultMap="UserResult">
        SELECT
        <include refid="User_Columns_Join" />
        FROM
        t_user t1
        LEFT JOIN t_user_role t2 ON t1.id = t2.user_id
        LEFT JOIN t_role t3 ON t2.role_id = t3.id WHERE t3.role_name = #{roleName}
    </select>

    <select id="selectForPage" resultMap="UserResult" >
        SELECT
        <include refid="User_Columns_Join" />, t3.id as rid, t3.role_name
        FROM
        t_user t1
        LEFT JOIN t_user_role t2 ON t1.id = t2.user_id
        LEFT JOIN t_role t3 ON t2.role_id = t3.id
        where t1.is_valid = 1 and t3.is_valid = 1
        <if test="@Ognl@isNotEmpty(userName)" >
            and user_name like '%${userName}%'
        </if>

    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" >
        insert into t_user (
        user_name, password, true_name, email, phone, is_valid, create_date, update_date
        ) values (
        #{userName}, #{password}, #{trueName}, #{email}, #{phone}, 1, now(), now()
        )
    </insert>

    <update id="update" >
        update
        t_user
        set
        user_name = #{userName}, true_name=#{trueName}, email = #{email},
        phone = #{phone}, update_date = now()
        where
        id = #{id}
    </update>

    <update id="delete" >
        update
        t_user
        set
        is_valid = 0, update_date = now()
        where
        id = #{id}
    </update>

    <update id="deleteBatch" >
        update
        t_user
        set
        is_valid = 0, update_date = now()
        where
        id in (${ids})
    </update>
</mapper>